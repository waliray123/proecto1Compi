
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import objetos.ErrorCom;
import objetos.Formulario;
import objetos.Componente;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserForms extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symF.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserForms() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserForms(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserForms(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\113\000\002\002\004\000\002\002\005\000\002\022" +
    "\002\000\002\016\007\000\002\016\003\000\002\017\004" +
    "\000\002\017\002\000\002\023\002\000\002\020\006\000" +
    "\002\020\002\000\002\021\004\000\002\021\003\000\002" +
    "\024\002\000\002\003\006\000\002\025\002\000\002\003" +
    "\006\000\002\026\002\000\002\003\006\000\002\027\002" +
    "\000\002\003\006\000\002\030\002\000\002\003\006\000" +
    "\002\031\002\000\002\003\006\000\002\003\007\000\002" +
    "\003\003\000\002\032\002\000\002\004\006\000\002\033" +
    "\002\000\002\004\006\000\002\034\002\000\002\004\006" +
    "\000\002\035\002\000\002\004\006\000\002\036\002\000" +
    "\002\004\006\000\002\037\002\000\002\004\006\000\002" +
    "\040\002\000\002\004\006\000\002\041\002\000\002\004" +
    "\006\000\002\042\002\000\002\004\006\000\002\043\002" +
    "\000\002\004\006\000\002\044\002\000\002\004\006\000" +
    "\002\045\002\000\002\004\006\000\002\005\004\000\002" +
    "\006\004\000\002\007\004\000\002\007\004\000\002\007" +
    "\004\000\002\007\004\000\002\007\004\000\002\007\004" +
    "\000\002\007\004\000\002\007\004\000\002\010\004\000" +
    "\002\010\004\000\002\010\004\000\002\010\004\000\002" +
    "\011\004\000\002\011\003\000\002\012\004\000\002\012" +
    "\004\000\002\012\004\000\002\013\004\000\002\013\003" +
    "\000\002\014\004\000\002\014\003\000\002\015\004\000" +
    "\002\015\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\205\000\004\012\005\001\002\000\004\002\207\001" +
    "\002\000\004\010\006\001\002\000\006\005\011\011\007" +
    "\001\002\000\006\002\ufffd\011\ufffd\001\002\000\004\002" +
    "\000\001\002\000\024\006\uffff\007\uffff\016\uffff\017\uffff" +
    "\020\uffff\021\uffff\022\uffff\026\uffff\027\uffff\001\002\000" +
    "\024\006\020\007\014\016\013\017\024\020\016\021\022" +
    "\022\021\026\015\027\017\001\002\000\004\004\033\001" +
    "\002\000\024\006\020\007\014\016\013\017\024\020\016" +
    "\021\022\022\021\026\015\027\017\001\002\000\004\004" +
    "\101\001\002\000\004\004\171\001\002\000\004\004\050" +
    "\001\002\000\006\007\uffb9\011\uffb9\001\002\000\004\004" +
    "\033\001\002\000\004\004\040\001\002\000\006\007\uffe8" +
    "\011\uffe8\001\002\000\004\004\033\001\002\000\006\007" +
    "\026\011\ufffb\001\002\000\006\005\011\011\007\001\002" +
    "\000\004\011\030\001\002\000\006\002\ufffe\011\ufffe\001" +
    "\002\000\004\011\ufffc\001\002\000\006\006\ufff1\007\ufff1" +
    "\001\002\000\004\013\034\001\002\000\006\006\uffcf\007" +
    "\uffcf\001\002\000\006\006\020\007\014\001\002\000\006" +
    "\007\ufff0\011\ufff0\001\002\000\006\006\uffbb\007\uffbb\001" +
    "\002\000\006\013\034\015\044\001\002\000\006\006\uffed" +
    "\007\uffed\001\002\000\006\006\020\007\014\001\002\000" +
    "\006\007\uffec\011\uffec\001\002\000\006\006\uffbc\007\uffbc" +
    "\001\002\000\006\006\uffeb\007\uffeb\001\002\000\006\006" +
    "\020\007\014\001\002\000\006\007\uffea\011\uffea\001\002" +
    "\000\004\010\051\001\002\000\010\005\053\006\ufff8\007" +
    "\ufff8\001\002\000\006\006\020\007\014\001\002\000\032" +
    "\023\ufffa\024\ufffa\025\ufffa\031\ufffa\032\ufffa\033\ufffa\034" +
    "\ufffa\035\ufffa\036\ufffa\037\ufffa\040\ufffa\041\ufffa\001\002" +
    "\000\032\023\070\024\056\025\055\031\066\032\065\033" +
    "\063\034\061\035\071\036\060\037\057\040\064\041\067" +
    "\001\002\000\004\004\101\001\002\000\004\004\033\001" +
    "\002\000\004\004\033\001\002\000\004\004\152\001\002" +
    "\000\004\004\142\001\002\000\006\007\135\011\136\001" +
    "\002\000\004\004\033\001\002\000\004\004\033\001\002" +
    "\000\004\004\033\001\002\000\004\004\111\001\002\000" +
    "\004\004\033\001\002\000\004\004\101\001\002\000\004" +
    "\004\033\001\002\000\006\006\uffd9\007\uffd9\001\002\000" +
    "\006\006\075\007\074\001\002\000\032\023\070\024\056" +
    "\025\055\031\066\032\065\033\063\034\061\035\071\036" +
    "\060\037\057\040\064\041\067\001\002\000\006\007\uffb7" +
    "\011\uffb7\001\002\000\006\007\uffd8\011\uffd8\001\002\000" +
    "\006\007\uffb8\011\uffb8\001\002\000\006\006\uffe7\007\uffe7" +
    "\001\002\000\004\015\102\001\002\000\006\006\uffce\007" +
    "\uffce\001\002\000\006\006\075\007\074\001\002\000\006" +
    "\007\uffe6\011\uffe6\001\002\000\006\006\uffd1\007\uffd1\001" +
    "\002\000\006\006\075\007\074\001\002\000\006\007\uffd0" +
    "\011\uffd0\001\002\000\006\006\uffe1\007\uffe1\001\002\000" +
    "\022\045\120\046\113\047\115\050\114\051\121\052\116" +
    "\053\117\054\112\001\002\000\006\006\uffc6\007\uffc6\001" +
    "\002\000\006\006\uffcc\007\uffcc\001\002\000\006\006\uffca" +
    "\007\uffca\001\002\000\006\006\uffcb\007\uffcb\001\002\000" +
    "\006\006\uffc8\007\uffc8\001\002\000\006\006\uffc7\007\uffc7" +
    "\001\002\000\006\006\uffcd\007\uffcd\001\002\000\006\006" +
    "\uffc9\007\uffc9\001\002\000\006\006\075\007\074\001\002" +
    "\000\006\007\uffe0\011\uffe0\001\002\000\006\006\uffdf\007" +
    "\uffdf\001\002\000\006\006\075\007\074\001\002\000\006" +
    "\007\uffde\011\uffde\001\002\000\006\006\uffd3\007\uffd3\001" +
    "\002\000\006\006\075\007\074\001\002\000\006\007\uffd2" +
    "\011\uffd2\001\002\000\006\006\uffdd\007\uffdd\001\002\000" +
    "\006\006\075\007\074\001\002\000\006\007\uffdc\011\uffdc" +
    "\001\002\000\010\005\053\006\ufff8\007\ufff8\001\002\000" +
    "\006\006\ufff6\007\ufff6\001\002\000\006\006\ufff9\007\ufff9" +
    "\001\002\000\006\006\ufff7\007\ufff7\001\002\000\006\006" +
    "\uffdb\007\uffdb\001\002\000\012\055\145\056\144\057\143" +
    "\060\146\001\002\000\006\006\uffc3\007\uffc3\001\002\000" +
    "\006\006\uffc4\007\uffc4\001\002\000\006\006\uffc5\007\uffc5" +
    "\001\002\000\006\006\uffc2\007\uffc2\001\002\000\006\006" +
    "\075\007\074\001\002\000\006\007\uffda\011\uffda\001\002" +
    "\000\006\006\uffc0\007\uffc0\001\002\000\006\013\034\014" +
    "\156\001\002\000\006\006\uffd7\007\uffd7\001\002\000\006" +
    "\006\075\007\074\001\002\000\006\007\uffd6\011\uffd6\001" +
    "\002\000\006\006\uffc1\007\uffc1\001\002\000\006\006\uffd5" +
    "\007\uffd5\001\002\000\006\006\075\007\074\001\002\000" +
    "\006\007\uffd4\011\uffd4\001\002\000\006\006\uffe5\007\uffe5" +
    "\001\002\000\006\006\075\007\074\001\002\000\006\007" +
    "\uffe4\011\uffe4\001\002\000\006\006\uffe3\007\uffe3\001\002" +
    "\000\006\006\075\007\074\001\002\000\006\007\uffe2\011" +
    "\uffe2\001\002\000\006\007\uffe9\011\uffe9\001\002\000\010" +
    "\042\176\043\177\044\175\001\002\000\006\006\uffef\007" +
    "\uffef\001\002\000\006\006\020\007\014\001\002\000\006" +
    "\007\uffee\011\uffee\001\002\000\006\006\uffbd\007\uffbd\001" +
    "\002\000\006\006\uffbe\007\uffbe\001\002\000\006\006\uffbf" +
    "\007\uffbf\001\002\000\006\006\ufff5\007\ufff5\001\002\000" +
    "\006\006\020\007\014\001\002\000\006\007\ufff4\011\ufff4" +
    "\001\002\000\006\007\uffba\011\uffba\001\002\000\006\006" +
    "\ufff3\007\ufff3\001\002\000\006\006\020\007\014\001\002" +
    "\000\006\007\ufff2\011\ufff2\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\205\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\016\007\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\022\011\001\001\000\006\003" +
    "\024\014\022\001\001\000\004\005\203\001\001\000\006" +
    "\003\202\014\022\001\001\000\004\006\177\001\001\000" +
    "\004\012\171\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\044\001\001\000\006\005\036\013\040\001" +
    "\001\000\002\001\001\000\004\005\031\001\001\000\004" +
    "\017\026\001\001\000\004\016\030\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\026\034" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\035\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\030\041\001\001\000\004\014\042\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\031\045" +
    "\001\001\000\004\014\046\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\020\051\001\001\000\004\014\167" +
    "\001\001\000\004\023\053\001\001\000\004\004\061\001" +
    "\001\000\004\006\164\001\001\000\004\005\161\001\001" +
    "\000\004\005\156\001\001\000\006\005\150\011\152\001" +
    "\001\000\004\010\140\001\001\000\004\021\136\001\001" +
    "\000\004\005\131\001\001\000\004\005\126\001\001\000" +
    "\004\005\123\001\001\000\004\007\107\001\001\000\004" +
    "\005\104\001\001\000\004\006\077\001\001\000\004\005" +
    "\071\001\001\000\004\041\072\001\001\000\004\015\075" +
    "\001\001\000\004\004\076\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\032\102\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\103\001" +
    "\001\000\002\001\001\000\004\045\105\001\001\000\004" +
    "\015\106\001\001\000\002\001\001\000\004\035\121\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\015\122\001\001\000\002\001\001\000\004\036\124\001" +
    "\001\000\004\015\125\001\001\000\002\001\001\000\004" +
    "\044\127\001\001\000\004\015\130\001\001\000\002\001" +
    "\001\000\004\037\132\001\001\000\004\015\133\001\001" +
    "\000\002\001\001\000\004\020\137\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\040\146" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\015\147" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\042\153\001\001\000\004\015\154\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\043\157\001" +
    "\001\000\004\015\160\001\001\000\002\001\001\000\004" +
    "\033\162\001\001\000\004\015\163\001\001\000\002\001" +
    "\001\000\004\034\165\001\001\000\004\015\166\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\172\001\001\000\004\014\173\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\200\001\001\000\004\014\201\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\204\001" +
    "\001\000\004\014\205\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserForms$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserForms$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserForms$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private List<ErrorCom> erroresCom;
    private List<Formulario> formularios;
    private Formulario formularioAct;
    private Componente componenteAct;


	public ParserForms(LexerForms lex) {
		super(lex);
        this.erroresCom = lex.getErroresCom();
        this.formularios = new ArrayList<>();      
        componenteAct = new Componente(); 
        formularioAct = new Formulario(); 
	}

    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        erroresCom.add(new ErrorCom("Sintactico","No se esperaba Componente",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value)));
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        erroresCom.add(new ErrorCom("Sintactico","Error sintactico Irrecuperable",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value)));
    }

    protected int error_sync_size() {
		return 2;
	}

    private void insertarNuevoFormulario(){
        this.formularioAct = new Formulario(); 
        this.formularios.add(this.formularioAct);
    }

    private void insertarNuevoComp(){
        this.componenteAct = new Componente();
        this.formularioAct.setNuevoComponente(this.componenteAct);
    }

    public List<Formulario> getFormularios(){
        return this.formularios;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserForms$actions {
  private final ParserForms parser;

  /** Constructor */
  CUP$ParserForms$actions(ParserForms parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserForms$do_action_part00000000(
    int                        CUP$ParserForms$act_num,
    java_cup.runtime.lr_parser CUP$ParserForms$parser,
    java.util.Stack            CUP$ParserForms$stack,
    int                        CUP$ParserForms$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserForms$result;

      /* select the action based on the action number */
      switch (CUP$ParserForms$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		RESULT = start_val;
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserForms$parser.done_parsing();
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= INI PARI form 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$0 ::= 
            {
              Object RESULT =null;
insertarNuevoFormulario();
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$0",16, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // form ::= CORCHI NT$0 sig formp PARD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("form",12, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-4)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // form ::= PARD 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("form",12, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // formp ::= COMA form 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("formp",13, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // formp ::= 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("formp",13, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$1 ::= 
            {
              Object RESULT =null;
insertarNuevoComp();
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$1",17, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // compon ::= CORCHI NT$1 estr componp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("compon",14, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // compon ::= 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("compon",14, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // componp ::= COMA compon 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("componp",15, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // componp ::= PARD 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("componp",15, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NT$2 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
formularioAct.setIdForm(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$2",18, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // sig ::= ID_FORM cont2 NT$2 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$3 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
formularioAct.setTitulo(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$3",19, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sig ::= TITUL cont1 NT$3 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NT$4 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
formularioAct.setNombre(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$4",20, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // sig ::= NOMBRE cont1 NT$4 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NT$5 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
formularioAct.setTema(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$5",21, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // sig ::= TEMA cont6 NT$5 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // NT$6 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
formularioAct.setUsuarioCrea(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$6",22, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sig ::= USUARIO_CREA cont7 NT$6 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // NT$7 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
formularioAct.setFechaCrea(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$7",23, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // sig ::= FECHA_CREA cont1 NT$7 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$7
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // sig ::= ESTRUCT DOSPUNT PARI compon fin1 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-4)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // sig ::= fin1 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$8 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setIdComp(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$8",24, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // estr ::= ID_COMP cont2 NT$8 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // NT$9 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setNombre(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$9",25, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // estr ::= NOMBRE_CAMPO cont1 NT$9 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NT$10 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setIdformulario(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$10",26, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // estr ::= FORM cont2 NT$10 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NT$11 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setClase(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$11",27, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // estr ::= CLASE cont3 NT$11 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$11
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // NT$12 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setIndice(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$12",28, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // estr ::= INDICE cont1 NT$12 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // NT$13 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setTextoVisible(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$13",29, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // estr ::= TEXTO_VIS cont1 NT$13 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // NT$14 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setAlineacion(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$14",30, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // estr ::= ALINEA cont4 NT$14 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$15 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setRequerido(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$15",31, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // estr ::= REQUE cont1 NT$15 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$15
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // NT$16 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setOpciones(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$16",32, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // estr ::= OPCIONES cont5 NT$16 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // NT$17 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setFilas(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$17",33, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // estr ::= FILAS cont1 NT$17 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$17
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // NT$18 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setColumnas(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$18",34, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // estr ::= COLUMNAS cont1 NT$18 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // NT$19 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
componenteAct.setUrl(String.valueOf(nom));
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("NT$19",35, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // estr ::= URL cont1 NT$19 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$19
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-2)).value;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("estr",2, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-3)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // cont1 ::= DOSPUNT NOMBREP 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
		RESULT = nom;
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont1",3, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // cont2 ::= DOSPUNT ID 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
		RESULT = nom;
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont2",4, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // cont3 ::= DOSPUNT CAMPO_TEXT 
            {
              Object RESULT =null;
		RESULT = "CAMPO_TEXT";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // cont3 ::= DOSPUNT AREA_TEXT 
            {
              Object RESULT =null;
		RESULT = "AREA_TEXT";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // cont3 ::= DOSPUNT CHECK_BOX 
            {
              Object RESULT =null;
		RESULT = "CHECK_BOX";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // cont3 ::= DOSPUNT RADIO 
            {
              Object RESULT =null;
		RESULT = "RADIO";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // cont3 ::= DOSPUNT FICHERO 
            {
              Object RESULT =null;
		RESULT = "FICHERO";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // cont3 ::= DOSPUNT IMAGEN 
            {
              Object RESULT =null;
		RESULT = "IMAGEN";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // cont3 ::= DOSPUNT COMBO 
            {
              Object RESULT =null;
		RESULT = "COMBO";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // cont3 ::= DOSPUNT BOTON 
            {
              Object RESULT =null;
		RESULT = "BOTON";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont3",5, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // cont4 ::= DOSPUNT CENTRO 
            {
              Object RESULT =null;
		RESULT = "CENTRO";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont4",6, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // cont4 ::= DOSPUNT IZQUIERDA 
            {
              Object RESULT =null;
		RESULT = "IZQUIERDA";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont4",6, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // cont4 ::= DOSPUNT DERECHA 
            {
              Object RESULT =null;
		RESULT = "DERECHA";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont4",6, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // cont4 ::= DOSPUNT JUSTIFICAR 
            {
              Object RESULT =null;
		RESULT = "JUSTIFICAR";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont4",6, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cont5 ::= DOSPUNT NOMBRE_OPCION 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
		RESULT = nom;
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont5",7, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cont5 ::= cont1 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
		RESULT = String.valueOf(nom);
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont5",7, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // cont6 ::= DOSPUNT DARK 
            {
              Object RESULT =null;
		RESULT = "DARK";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont6",8, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // cont6 ::= DOSPUNT BLUE 
            {
              Object RESULT =null;
		RESULT = "BLUE";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont6",8, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cont6 ::= DOSPUNT WHITE 
            {
              Object RESULT =null;
		RESULT = "WHITE";
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont6",8, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cont7 ::= DOSPUNT ID 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
		RESULT = nom;
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont7",9, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cont7 ::= cont1 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()).right;
		Object nom = (Object)((java_cup.runtime.Symbol) CUP$ParserForms$stack.peek()).value;
		RESULT = String.valueOf(nom);
              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("cont7",9, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // fin1 ::= COMA sig 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("fin1",10, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // fin1 ::= CORCHD 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("fin1",10, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // fin2 ::= COMA estr 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("fin2",11, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.elementAt(CUP$ParserForms$top-1)), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // fin2 ::= CORCHD 
            {
              Object RESULT =null;

              CUP$ParserForms$result = parser.getSymbolFactory().newSymbol("fin2",11, ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserForms$stack.peek()), RESULT);
            }
          return CUP$ParserForms$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserForms$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserForms$do_action(
    int                        CUP$ParserForms$act_num,
    java_cup.runtime.lr_parser CUP$ParserForms$parser,
    java.util.Stack            CUP$ParserForms$stack,
    int                        CUP$ParserForms$top)
    throws java.lang.Exception
    {
              return CUP$ParserForms$do_action_part00000000(
                               CUP$ParserForms$act_num,
                               CUP$ParserForms$parser,
                               CUP$ParserForms$stack,
                               CUP$ParserForms$top);
    }
}

}
